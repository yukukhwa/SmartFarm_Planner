<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.spam.sfplanner.actresult.ActResultMapper">
	<!-- 실행결과 리스트 db에서 1:N관계를 해결하기 위해 resultMap을 사용하였다
	실행결과와 작업단계가 1:N관계라 작업단계db를 collection하였다.
	작업단계와 보험비/기타지출비/원자재비/필요장비/인건비/메모가 1:N관계라 각각 collection하였다.
	필요장비와 대여비가 1:N 관계라 collection하였다
	메모와 메모파일이 1:N관계라 collection하였다.
	외래키로 되어있는 컬럼이 상위와 하위에 중복되더라도 테이블에 컬림이 되어있으므로 추가해두었다. -->
	<resultMap type="com.spam.sfplanner.actresult.ActResult" id="actResult">
		<id column="pp_resultlist_number" property="ppResultlistNumber"/>
		<result column="pp_resultlist_date" property="ppResultlistDate"/>
		<collection property="farmMember" ofType="com.spam.sfplanner.user.FarmMember">
			<id column="f_member_id" property="fMemberId"/>
			<result column="f_member_pw" property="fMemberPw"/>
			<result column="f_member_name" property="fMemberName"/>
			<result column="f_member_phone" property="fMemberPhone"/>
			<result column="f_member_gender" property="fMemberGender"/>
			<result column="f_member_email" property="fMemberEmail"/>
			<result column="f_member_privacy" property="fMemberPrivacy"/>
			<result column="f_member_doroaddress" property="fMemberDoroaddress"/>
			<result column="f_member_jibunaddress" property="fMemberJibunaddress"/>
			<result column="f_member_detailaddress" property="fMemberDetailaddress"/>
			<result column="f_member_registdate" property="fMemberRegistdate"/>
		</collection>
		<collection property="productionPlan" ofType="com.spam.sfplanner.plan.ProductionPlan">
			<id column="pp_number" property="ppNumber"/>
			<result column="pp_startday" property="ppStartday"/>
			<result column="pp_endday" property="ppEndday"/>
			<result column="pp_ownarea" property="ppOwnarea"/>
			<result column="pp_rentarea" property="ppRentarea"/>
			<result column="pp_recordday" property="ppRecordday"/>
			<result column="pp_secret" property="ppSecret"/>
			<collection property="titlePlan" ofType="com.spam.sfplanner.plan.TitlePlan">
				<id column="pp_name_number" property="ppNameNumber"/>
				<result column="pp_name_planname" property="ppNamePlanname"/>
			</collection>
		</collection>
		<collection property="farm" ofType="com.spam.sfplanner.corporation.Farm">
			<id column="f_number" property="fNumber"/>
			<result column="f_name" property="fName"/>
			<result column="f_member_id" property="fMemberId"/>
			<result column="f_phone" property="fPhone"/>
			<result column="f_doroaddress" property="fDoroaddress"/>
			<result column="f_jibunaddress" property="fJibunaddress"/>
			<result column="f_party" property="fParty"/>
			<result column="f_registdate" property="fRegistdate"/>
		</collection>
	</resultMap>
	<select id="oneSelectActResult"
			parameterType="Map"
			resultMap="actResult">
		SELECT
			sp_pp_resultlist.pp_resultlist_number,
			sp_pp_name_cate.pp_name_planname,
			sp_pp_resultlist.f_number,
			sp_pp_resultlist.pp_resultlist_date,
			sp_pp_resultlist.f_member_id
		FROM sp_pp_resultlist
		JOIN sp_pp ON sp_pp.pp_number = sp_pp_resultlist.pp_number
		JOIN sp_pp_name_cate ON sp_pp_name_cate.pp_name_number = sp_pp.pp_name_number
		<if test="search == 'yes'">
			WHERE sp_pp_resultlist.pp_resultlist_number = #{ppResultlistNumber}
		</if>
	</select>
	<select id="listSelectActResult"
			parameterType="Map"
			resultMap="actResult">
		SELECT
			sp_pp_name_cate.pp_name_planname,
			sp_pp_resultlist.pp_resultlist_number,
			sp_pp_resultlist.f_number,
			sp_pp_resultlist.pp_resultlist_date
		FROM sp_pp_resultlist
		JOIN sp_pp ON sp_pp.pp_number = sp_pp_resultlist.pp_number
		JOIN sp_pp_name_cate ON sp_pp_name_cate.pp_name_number = sp_pp.pp_name_number
		<if test="search == 'yes'">
			WHERE sp_pp_resultlist.f_number = #{fNumber}
		</if>
	</select>
	<insert id="insertActResult" parameterType="com.spam.sfplanner.actresult.ActResult">
		INSERT INTO sp_pp_resultlist (
			pp_number,
			f_number,
			pp_resultlist_date,
			f_member_id
		)
		VALUES (
			#{productionPlan.ppNumber},
			#{farm.fNumber},
			NOW(),
			#{farmMember.fMemberId}
		)
	</insert>
</mapper>

