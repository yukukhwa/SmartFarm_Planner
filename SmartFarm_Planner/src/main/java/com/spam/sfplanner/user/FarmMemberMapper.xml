<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.spam.sfplanner.user.FarmMemberMapper">
	 <resultMap type="com.spam.sfplanner.user.FarmMemberDb" id="resultFarmMember">
			<!-- property : 대상객체의 setter메소드명 지정 -->
			<result column="fNumber" property="fNumber"/>
	        <result column="fMemberId" property="fMemberId"/>
	        <result column="fMemberName" property="fMemberName"/>
	        <result column="fMemberEmail" property="fMemberEmail"/>
	        <!-- ofType : 목록을 구성하는 객체의 타입을 지정.실제 반환타입은 List<>가 된다   -->
	        <collection property="FarmMemberDb" ofType="com.spam.sfplanner.user.FarmMemberDb">
	            <id column="fNumber" property="fNumber"/>
	            <result column="fNumber" property="fNumber"/>
	            <result column="fMemberId" property="fMemberId"/>
	            <result column="fMemberName" property="fMemberName"/>
	            <result column="fMemberEmail" property="fMemberEmail"/>
	        </collection>
	  </resultMap>
 	<!-- 해당 회원의 상세정보 보기 -->
 	<!-- <select id="selectOneFarmMember"></select> -->
 	
 	<!-- 해당 농가의 회원리스트를 보기 -->
 	<select id="selectOneFarmMemberList"
 		parameterType="integer"
 		resultMap="resultFarmMember">
	 		SELECT sp_farm_member.f_number AS fNumber
				, sp_farm_member.f_member_id AS fMemberId
				, sp_farm_member.f_member_name AS fMemberName
				, sp_farm_member.f_member_email AS fMemberEmail
			FROM sp_farm
			JOIN sp_farm_member 
			ON sp_farm.f_number = sp_farm_member.f_number
			WHERE sp_farm_member.f_number=#{fNumber}
 	</select>
 	
 	<insert id="insertFarmMember"
 		parameterType="com.spam.sfplanner.user.FarmMemberView">
 		INSERT INTO sp_farm_member(
 			f_member_id
 			, f_number
 			, f_member_pw
 			, f_member_name
 			, f_member_phone
 			, f_member_gender
 			, f_member_email
 			, f_member_privacy
 			, f_member_doroaddress
 			, f_member_jibunaddress
 			, f_member_detailaddress
 			, f_member_registdate)
		VALUES (
			#{fMemberId}
			, #{fNumber}
			, #{fMemberPw}
			, #{fMemberName}
			, #{fMemberPhone}
			, #{fMemberGender}
			, #{fMemberEmail}
			, #{fMemberPrivacy}
			, #{fMemberDoroaddress}
			, #{fMemberJibunaddress}
			, #{fMemberDetailaddress}
			, NOW())
 	</insert>
 </mapper>